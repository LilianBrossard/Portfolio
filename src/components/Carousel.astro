---
import PortfolioPreview from "../components/PortfolioPreview.astro";

import { getCollection } from "astro:content";

const projects = (await getCollection("work")).sort(
    (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
);

// const { img1 } = ;
// const { img2 } = ;
// const { img3 } = ;
// const { img4 } = ;
// const { img5 } = ;
// const { alt } = ;
---

<!-- https://codepen.io/nera-iba/pen/eYXgWgM -->
<div class="carousel w-full h-[30rem] bg-slate-950">
    <!--using font awesome for arrows-->
    <div class="prev w-16 h-16 z-20 cursor-pointer">
        <img src="/assets/left-arrow.svg" alt="Previous" class="w-16 h-16" />
    </div>
    <!-- <i class="prev"></i> -->

    {
        projects.slice(3).map((project) => (
            <div class="image w-screen h-full">
                <PortfolioPreview project={project} />
            </div>
        ))
    }

    <!--using font awesome for arrows-->
    <div class="next w-16 h-16 z-20 cursor-pointer">
        <img src="/assets/right-arrow.svg" alt="next" class="w-16 h-16" />
    </div>
    <!--slider indicators-->
    <div class="carousel-indicators"></div>
</div>

<script>
    const carousel = document.querySelector(".carousel");
    if (carousel != null) {
        const images = Array.from(carousel.querySelectorAll(".image"));
        const indicatorsContainer = document.querySelector(
            ".carousel-indicators",
        );
        let currentIndex = 0;
        images[currentIndex].classList.add("active");
        const prevButton = carousel.querySelector(".prev");
        const nextButton = carousel.querySelector(".next");
        if (prevButton != null && nextButton != null) {
            prevButton.addEventListener("click", () =>
                updateCarousel(currentIndex - 1),
            );
            nextButton.addEventListener("click", () =>
                updateCarousel(currentIndex + 1),
            );

            setInterval(() => updateCarousel(currentIndex + 1), 15000);

            //--------Indicators defined---------//

            /* image is the current image being processed, and index is its index in the images array. The function creates a new div, adds the carousel-indicator class to it, sets up a click event listener that calls updateCarousel(index), appends the new div to indicatorsContainer, and then returns the new div. The map() function then returns a new array containing all these new div elements.*/

            const indicators = images.map((image, index) => {
                const indicator = document.createElement("div");
                indicator.classList.add("carousel-indicator");
                indicator.addEventListener("click", () =>
                    updateCarousel(index),
                );
                if (indicatorsContainer != null) {
                    indicatorsContainer.appendChild(indicator);
                    return indicator;
                }
            });

            //--------Function to change image---------//
            const updateCarousel = (newIndex: any) => {
                images[currentIndex].classList.remove("active");
                currentIndex = (newIndex + images.length) % images.length;
                images[currentIndex].classList.add("active");
                updateIndicators();
            };

            //--------Function to update indicators---------//
            const updateIndicators = () => {
                indicators.forEach((indicator, index) => {
                    if (indicator != undefined) {
                        if (index === currentIndex) {
                            indicator.classList.add("active");
                        } else {
                            indicator.classList.remove("active");
                        }
                    }
                });
            };
        }
    }
</script>

<style>
    .carousel {
        position: relative;
        width: 100vw;
        height: 600px;
    }

    .carousel .image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        opacity: 0;
        z-index: -10;
        transition: opacity 0.5s ease-in-out;
    }

    .carousel .image.active {
        opacity: 1; /* Makes the image visible*/
        z-index: 10;
    }

    /*Carousel arrows*/
    .prev {
        position: absolute;
        top: 40%;
        left: 30px;
    }

    .next {
        top: 40%;
        position: absolute;
        right: 30px;
    }

    /*Carousel indicators*/
    .carousel-indicators {
        position: absolute;
        top: auto;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 8px;
    }

    .carousel-indicator {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background-color: transparent;
        border: 1px solid #fff;
        cursor: pointer;
    }

    .carousel-indicator.active {
        background-color: #fff;
        border: 1px solid #fff;
    }

    /* For mobile screens */
    @media (max-width: 767px) {
        .carousel {
            height: 250px;
        }

        .carousel .image {
            height: auto; /* Allow the height to adjust automatically */
            object-fit: fill; /* Fill the container without preserving the aspect ratio */
        }

        .carousel-indicators,
        .carousel-indicator {
            display: none;
        }

        .carousel i {
            top: 17vh;
        }
    }
</style>
